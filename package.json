{
  "name": "react-web-app",
  "private": true,
  "version": "0.1.5",
  "type": "module",
  "scripts": {
    "build": "react-router build",
    "dev": "node scripts/dev.js",
    "dev:api": "NODE_ENV=development node server.js",
    "dev:vite": "react-router dev --host --port 3000",
    "dev:https": "npm run certs:generate && npm run dev",
    "certs:generate": "chmod +x generate-certs.sh && ./generate-certs.sh",
    "start": "react-router-serve ./build/server/index.js",
    "start:prod": "NODE_ENV=production node server.js",
    "typecheck": "react-router typegen && tsc",
    "docker:build": "docker build -t react-web-app .",
    "deploy": "./scripts/deploy-terraform.sh --env prod",
    "deploy:dev": "./scripts/deploy-terraform.sh --env dev",
    "deploy:no-build": "./scripts/deploy-terraform.sh --env prod --no-build",
    "dev:logs": "gcloud run services logs read buy-it-dev --region=us-central1 --limit=50",
    "dev:status": "gcloud run services describe buy-it-dev --region=us-central1 --format=\"table(metadata.name,status.url,status.conditions[0].type,status.conditions[0].status)\"",
    "dev:url": "gcloud run services describe buy-it-dev --region=us-central1 --format=\"value(status.url)\"",
    "dev:delete": "gcloud run services delete buy-it-dev --region=us-central1",
    "infra:init": "cd terraform && terraform init",
    "infra:plan:dev": "cd terraform && terraform plan -var-file=dev.tfvars",
    "infra:plan:prod": "cd terraform && terraform plan -var-file=prod.tfvars",
    "infra:destroy:dev": "cd terraform && terraform destroy -var-file=dev.tfvars",
    "infra:destroy:prod": "cd terraform && terraform destroy -var-file=prod.tfvars",
    "test:terraform": "./scripts/test-terraform.sh",
    "shadcn": "shadcn",
    "changeset": "changeset",
    "version": "changeset version",
    "release": "changeset publish && git add . && git commit -m \"chore: release\" && git tag v$(node -e \"import { createRequire } from 'module'; const require = createRequire(import.meta.url); console.log(require('./package.json').version);\") && git push --tags"
  },
  "dependencies": {
    "@radix-ui/react-avatar": "^1.1.6",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-navigation-menu": "^1.2.5",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.4",
    "@radix-ui/react-separator": "^1.1.4",
    "@radix-ui/react-slider": "^1.3.2",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-visually-hidden": "^1.2.3",
    "@react-router/node": "^7.2.0",
    "@react-router/serve": "^7.2.0",
    "@types/firebase": "^2.4.32",
    "ais-toolkit": "^1.0.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.0",
    "cmdk": "^1.1.1",
    "date-fns": "^4.1.0",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "firebase": "^11.3.1",
    "html2canvas": "^1.4.1",
    "isbot": "^5.1.17",
    "konva": "^9.3.20",
    "lucide-react": "^0.476.0",
    "next-themes": "^0.4.6",
    "react": "^19.1.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "^19.1.0",
    "react-firebase-hooks": "^5.1.1",
    "react-hot-toast": "^2.5.2",
    "react-konva": "^19.0.4",
    "react-player": "^2.14.1",
    "react-router": "^7.2.0",
    "sonner": "^2.0.3",
    "tailwind-merge": "^3.0.2",
    "tailwindcss-animate": "^1.0.7",
    "use-image": "^1.1.4"
  },
  "devDependencies": {
    "@changesets/cli": "^2.29.4",
    "@react-router/dev": "^7.2.0",
    "@tailwindcss/vite": "^4.0.0",
    "@types/express": "^4.17.22",
    "@types/node": "^20",
    "@types/react": "^19.0.1",
    "@types/react-dom": "^19.0.1",
    "prettier": "^3.5.2",
    "react-router-devtools": "^1.1.0",
    "tailwindcss": "^4.0.0",
    "typescript": "^5.7.2",
    "vite": "^5.4.11",
    "vite-tsconfig-paths": "^5.1.4"
  }
}
